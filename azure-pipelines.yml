# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger: none

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  dockerUserName: 'ux007893'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build_Image
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Login to Docker Hub
      inputs:
        containerRegistry: 'DockerRegistry'
        command: 'login'
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'DockerRegistry'
        repository: 'ux007893/appliation'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)
#          ux007893/appliation:latest
    - task: Docker@2
      displayName: Pushing Image to Docker Hub
      inputs:
        containerRegistry: 'DockerRegistry'
        repository: 'ux007893/appliation'
        command: 'push'
        tags: |
         $(tag)
#         latest
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          set -x
          
          # -----------------------------
          # GitHub Repo Settings
          # -----------------------------
          
          # Replace these with your GitHub username + PAT (Personal Access Token)
          GITHUB_USERNAME="nishu-kumar7500"
          
          REPO_NAME="myPythonWebApp"
          
          # GitHub repository URL
          REPO_URL="https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com/${GITHUB_USERNAME}/${REPO_NAME}.git"
          
          # -----------------------------
          # Clone repo into /tmp
          # -----------------------------
          LOCAL_DIR="/tmp/temp_repo"
          git clone "$REPO_URL" "$LOCAL_DIR"
          cd "$LOCAL_DIR"
          
          # Configure Git user identity
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # -----------------------------
          # Install yq
          # -----------------------------
          wget https://github.com/mikefarah/yq/releases/download/v4.25.1/yq_linux_amd64 -O yq
          chmod +x yq
          sudo mv yq /usr/local/bin/yq
          
          # -----------------------------
          # Define pipeline vars
          # -----------------------------
          IMAGE_REPO="application"
          DOCKER_HUB_USERNAME="ux007893"   # DockerHub username
          TAG=$(Build.BuildId)             # Or from pipeline env var
          
          # Kubernetes manifest file
          FILE_PATH="k8s/deployment.yaml"
          echo "Updating image tag for $FILE_PATH"
          
          echo "--- Before Update ---"
          cat "$FILE_PATH"
          
          # -----------------------------
          # Update image reference
          # -----------------------------
          yq e ".spec.template.spec.containers[0].image = \"${DOCKER_HUB_USERNAME}/${IMAGE_REPO}:${TAG}\"" -i "$FILE_PATH"
          
          echo "--- After Update ---"
          cat "$FILE_PATH"
          
          # -----------------------------
          # Commit + Push changes
          # -----------------------------
          git add "$FILE_PATH"
          git commit -m "Pipeline: Update Kubernetes manifest image tag to ${TAG}"
          git push
          
          # Cleanup
          rm -rf "$LOCAL_DIR"
