name: Build and deploy Python app to EC2 virtual machine

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkou repositry
      uses: actions/checkout@v5
    - name: Set-UP Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: "pip"
    - name: Install all the dependencies 
      run: |
        python -m pip install --upgrade pip wheel
        pip install pytest
        pip install -r requirements.txt
    - name: Run tests
      run: |
        export PYTHONPATH=$(pwd)
        pytest -q tests/test_app.py 
    ####################################################################################################
    # add || echo "No tests found, skipping." after pytest -q tests/test_app.py if you want to skip test#
    ####################################################################################################
    - name: Create Python Web App Deployable  Package
      run: |
        mkdir -p deploy
        tar -czf deploy/app.tar.gz main.py requirements.txt templates/
    ## Upload Artifact
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: python-app
        path: deploy/app.tar.gz
        if-no-files-found: error

##############################################################################################################
#                             Deploy Stage                                                                   #
##############################################################################################################

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: python-app
        path: ./artifact
    - name: List deploy contents
      run: |
        pwd
        ls -la 
        ls -la .

    - name: Copy artifact to EC2
      uses: appleboy/scp-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT || 22 }}
        source: "artifact/app.tar.gz"
        target: "/var/www/myapp/"

    - name: Deploy to EC2 server
      uses: appleboy/ssh-action@v1
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT || 22 }}
        script:
            set -e
            cd /var/www/myapp
            tar -xzf artifact/app.tar.gz -C . && rm -f artifact/app.tar.gz
            python3 -m venv venv || true
            sudo chown -R ubuntu /var/www/myapp && sudo chmod -R g+rwX /var/www/myapp && sudo systemctl daemon-reload && sudo systemctl restart myapp && sudo systemctl status myapp --no-pager || true
    